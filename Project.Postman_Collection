{
	"info": {
		"_postman_id": "d9a8f7c4-10c2-4ab7-97aa-4b7d2a877dce",
		"name": "Project Trello",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32929153",
		"_collection_link": "https://interstellar-sunset-878149.postman.co/workspace/Team-Workspace~7ac3f19d-615c-43b9-9466-aa80e0d8cbb2/collection/32929153-d9a8f7c4-10c2-4ab7-97aa-4b7d2a877dce?action=share&source=collection_link&creator=32929153"
	},
	"item": [
		{
			"name": "Create Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"MyBoardId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"console.log(pm.response.responseSize)",
							"console.log(pm.response.responseTime)",
							"",
							"pm.test(\"Response time above 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.above(200);",
							"});",
							"",
							"pm.test(\"Response size is less than 200\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.above(200)",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"    pm.expect(jsonData.idOrganization).to.eql(\"65e4fae96e20369faabb86dc\");",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");",
							"    pm.expect(jsonData.prefs.switcherViews[0].viewType).to.eql(\"Board\");",
							"    ",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.prefs.background).to.eql(\"orange\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"MyBoardName\", \"BoardNo.\"+parseInt(Math.random()*1000));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"defaultLists\":\"false\",\r\n\"defaultLabels\":\"true\",\r\n\"prefs_background\":\"orange\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/boards/?key={{key}}&token={{token}}&name={{MyBoardName}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "name",
							"value": "{{MyBoardName}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"pm.test(\"Response size is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"    pm.expect(jsonData.idOrganization).to.eql(\"65e4fae96e20369faabb86dc\");\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"    pm.expect(jsonData.prefs.switcherViews[0].viewType).to.eql(\"Board\");\r",
							"    \r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.background).to.eql(\"orange\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/1/boards/{{MyBoardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{MyBoardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"pm.test(\"Response size is less than 2000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"     pm.expect(jsonData.name).to.eql(\"last Board\");\r",
							"    pm.expect(jsonData.idOrganization).to.eql(\"65e4fae96e20369faabb86dc\");\r",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");\r",
							"    pm.expect(jsonData.prefs.switcherViews[0].viewType).to.eql(\"Board\");\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.prefs.background).to.eql(\"purple\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"last Board\",\r\n    \"desc\":\"last update\",\r\n    \"prefs/background\":\"purple\",\r\n    \"labelNames/green\":\"green\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/boards/{{MyBoardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{MyBoardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Creat list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"MyListId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(pm.response.responseSize)\r",
							"console.log(pm.response.responseTime)\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200)\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"    pm.expect(jsonData.color).to.eql(null);\r",
							"   \r",
							"    \r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"MyList\",\r\n\"pos\":\"top\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/lists?key={{key}}&token={{token}}&idBoard={{MyBoardId}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idBoard",
							"value": "{{MyBoardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time above 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.above(200);",
							"});",
							"",
							"pm.test(\"Response size is less than 200\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.below(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"    pm.expect(jsonData.color).to.eql(null);",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/{{MyListId}}?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						"{{MyListId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Craet Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.environment.set(\"MyCardId\", jsonData.id);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time above 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.above(200);",
							"});",
							"",
							"pm.test(\"Response size is less than 200\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.above(200);",
							"});",
							"",
							"pm.test(\"Validating attachmentsByType values\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.badges.attachmentsByType.trello.board).to.eql(0);",
							"    pm.expect(jsonData.badges.attachmentsByType.trello.card).to.eql(0);",
							"});",
							"",
							"if (pm.environment.get(\"requestalreadyrun\")) {",
							"     postman.setNextRequest(\"Craet Card\");",
							"    postman.setNextRequest(\"Create Checklist\");",
							"} else {",
							"    postman.setNextRequest(\"Creat list\");",
							"    pm.environment.set(\"requestalreadyrun\", 1);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"Mycard\",\r\n\"due\":\"3/10/2024\",\r\n\"start\":\"3/6/2024\"\r\n\r\n\r\n\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/cards?key={{key}}&token={{token}}&idList={{MyListId}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						},
						{
							"key": "idList",
							"value": "{{MyListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.badges.attachmentsByType.trello.board).to.eql(0);\r",
							"    pm.expect(jsonData.badges.attachmentsByType.trello.card).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/cards/{{MyCardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{MyCardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"MyChecklistId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"checklist1\",\r\n\"pos\":\"top\"\r\n\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/checklists?idCard={{MyCardId}}&key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{MyCardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/checklists/{{MyChecklistId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{MyChecklistId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Checklist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"name\":\"lastchecklist\",\r\n    \"pos\":\"top\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/checklists/{{MyChecklistId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{MyChecklistId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Checklist2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time above 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response size is less than 200\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"checklist2\",\r\n\"pos\":\"bottom\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/checklists?idCard={{MyCardId}}&key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"checklists"
					],
					"query": [
						{
							"key": "idCard",
							"value": "{{MyCardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateCheckItem",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"checkitem\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n\"name\":\"checkitem\",\r\n\"checked\":\"false\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.trello.com/1/checklists/{{MyChecklistId}}/checkItems?key={{key}}&token={{token}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"checklists",
						"{{MyChecklistId}}",
						"checkItems"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Label",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.above(200);\r",
							"});\r",
							"\r",
							"postman.setNextRequest(null);\r",
							"\r",
							"/*pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"label1\");\r",
							"    pm.expect(jsonData.color).to.eql(\"green\");\r",
							"\r",
							"});*/"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \r\n      \"name\": \"1\",\r\n      \"color\": \"green\"\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_url}}/1/labels?idBoard={{MyBoardId}}&key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"labels"
					],
					"query": [
						{
							"key": "idBoard",
							"value": "{{MyBoardId}}"
						},
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Checklist",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/1/checklists/{{MyChecklistId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"checklists",
						"{{MyChecklistId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Card",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/1/cards/{{MyCardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"cards",
						"{{MyCardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Del Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_url}}/1/boards/{{MyBoardId}}?key={{key}}&token={{token}}",
					"host": [
						"{{Base_url}}"
					],
					"path": [
						"1",
						"boards",
						"{{MyBoardId}}"
					],
					"query": [
						{
							"key": "key",
							"value": "{{key}}"
						},
						{
							"key": "token",
							"value": "{{token}}"
						}
					]
				}
			},
			"response": []
		}
	]
}